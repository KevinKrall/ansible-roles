---

- name: configure mariadb server
  template:
    src: etc/my.cnf.j2
    dest: '{{ mariadb_conf }}'
    owner: root
    group: root
    mode: 0644
    seuser: system_u
    serole: object_r
    setype: mysqld_etc_t
    selevel: s0
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'
  notify:
    - 'check mariadb and restart'

- name: check if roots my.cnf exists
  stat:
    path: '{{ mariadb_root_mycnf }}'
  register: mariadb_register_root_mycnf
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'

- name: generate root password
  command: pwgen -s 24 -N 1
  register: mariadb_register_root_password
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'
  when: not mariadb_register_root_mycnf.stat.exists

- name: show root password
  debug:
    msg: '{{ mariadb_register_root_password.stdout }}'
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'
  when: mariadb_register_root_password.stdout is defined and mariadb_register_root_password.stdout

- name: create root password
  mysql_user:
    name: root
    host_all: yes
    password: '{{ mariadb_register_root_password.stdout }}'
    update_password: always
    check_implicit_admin: yes
    state: present
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'
  when: mariadb_register_root_password.stdout is defined and mariadb_register_root_password.stdout

- name: create roots my.cnf
  template:
    src: root/my.cnf.j2
    dest: '{{ mariadb_root_mycnf }}'
    owner: root
    group: root
    mode: 0600
    seuser: system_u
    serole: object_r
    setype: admin_home_t
    selevel: s0
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'
  when: mariadb_register_root_password.stdout is defined and mariadb_register_root_password.stdout

- name: create databases
  mysql_db:
    name: '{{ item.name }}'
    encoding: '{{ item.encoding | default("utf8") }}'
    login_unix_socket: '{{ mariadb_socket }}'
    state: present
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'
  when: item.name is defined and item.name
  with_items: '{{ mariadb_databases }}'

- name: create users
  mysql_user:
    name: '{{ item.name }}'
    host: '{{ item.host | default("localhost") }}'
    password: '{{ item.password }}'
    update_password: always
    priv: '{{ item.priv }}'
    login_unix_socket: '{{ mariadb_socket }}'
    state: present
  tags:
    - 'role::mariadb'
    - 'role::mariadb:config'
  when: item.name is defined and item.name and
        item.password is defined and item.password and
        item.priv is defined and item.priv
  with_items: '{{ mariadb_users }}'
